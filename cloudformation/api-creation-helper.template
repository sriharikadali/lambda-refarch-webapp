{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Parameters": {

		"APIStageName": {
			"Description": "",
			"Type": "String"
		},
		"AuthenticateUserFunction": {
			"Description": "",
			"Type": "String"
		},
		"SaveUserFunction": {
			"Description": "",
			"Type": "String"
		},
		"SavePostFunction": {
			"Description": "",
			"Type": "String"
		},
		"SaveCommentFunction": {
			"Description": "",
			"Type": "String"
		},
		"FindForumsFunction":{
			"Description":"",
			"Type": "String"
		},
		"FindPostFunction": {
			"Description": "",
			"Type": "String"
		},
		"FindPostsFunction": {
			"Description": "",
			"Type": "String"
		},
		"FindCommentsFunction": {
			"Description": "",
			"Type": "String"
		},
		"FindCommentFunction": {
			"Description": "",
			"Type": "String"
		}
	},

	"Resources":
    {
			"APIGWToLambda": {
				"Type": "AWS::IAM::Role",
				"Properties": {
					"AssumeRolePolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"apigateway.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}]
					},
					"Path": "/",
					"Policies": [{
						"PolicyName": "ServerlessBlogAPI-CallLambdaFunctions",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [{
								"Sid": "AllowLambda",
								"Effect": "Allow",
								"Action": [
									"lambda:InvokeFunction"
								],
								"Resource": "*"
							}]
						}
					}]
				}
			},


			"APIGWRESTAPI": {
					"Type": "AWS::ApiGateway::RestApi",
					"Properties": {
							"Description": "API for serverless blog",
							"Name": "serverless-blog-api"
					}
			},


			"APIGWRESTAPIlogin": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Fn::GetAtt": ["APIGWRESTAPI", "RootResourceId"] },
							"PathPart" : "login",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIloginPOST": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIlogin" },
							"HttpMethod": "POST",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {
											"application/json" : {
													"Fn::Join": ["\n", [
															"{",
															"    \"email\": \"$input.path('$.email')\",",
															"    \"password\": \"$input.path('$.password')\",",
															"    \"config\": { \"stageName\" : \"$context.stage\"}",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "AuthenticateUserFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIloginOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIlogin" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIuser": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Fn::GetAtt": ["APIGWRESTAPI", "RootResourceId"] },
							"PathPart" : "users",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIuserPOST": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIuser" },
							"HttpMethod": "POST",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {
												"Fn::Join": ["\n", [
														"{",
														"    \"email\": \"$input.path('$.email')\",",
														"    \"password\": \"$input.path('$.password')\",",
														"    \"config\": { \"stageName\" : \"$context.stage\"}",
														"}"
														]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "SaveUserFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIuserOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIuser" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIforums": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Fn::GetAtt": ["APIGWRESTAPI", "RootResourceId"] },
							"PathPart" : "forums",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIforumsGET": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIforums" },
							"HttpMethod": "GET",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref" : "AWS::Region" },
												":lambda:path/2015-03-31/functions/",
												{"Ref": "FindForumsFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIforumsOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIforums" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIforum": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Ref": "APIGWRESTAPIforums" },
							"PathPart" : "{id}",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIforumposts": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Ref": "APIGWRESTAPIforum" },
							"PathPart" : "posts",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIforumpostsGET": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIforumposts" },
							"HttpMethod": "GET",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"forumId\"   : \"$input.params('id')\",\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref" : "AWS::Region" },
												":lambda:path/2015-03-31/functions/",
												{"Ref": "FindPostsFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIforumpostsPOST": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIforumposts" },
							"HttpMethod": "POST",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"    \"forumId\": \"$input.params('id')\",\n",
															"    \"email\": \"$input.path('$.email')\",\n",
															"    \"title\": \"$input.path('$.title')\",\n",
															"    \"body\": \"$input.path('$.body')\",\n",
															"    \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "SavePostFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIforumpostsOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIforumposts" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIposts": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Fn::GetAtt": ["APIGWRESTAPI", "RootResourceId"] },
							"PathPart" : "posts",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIpost": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Ref": "APIGWRESTAPIposts" },
							"PathPart" : "{id}",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIpostGET": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIpost" },
							"HttpMethod": "GET",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"id\"   : \"$input.params('id')\",\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref" : "AWS::Region" },
												":lambda:path/2015-03-31/functions/",
												{"Ref": "FindPostFunction"},
												"/invocations"
											]
										]}
								}
						}
			},


			"APIGWRESTAPIpostOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIpost" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIcomments": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Ref": "APIGWRESTAPIpost" },
							"PathPart" : "comments",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIcommentsPOST": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIcomments" },
							"HttpMethod": "POST",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"postId\"   : \"$input.params('id')\",\n",
															"        \"message\" : $input.json('$.message'),\n",
															"        \"email\"   : $input.json('$.email'),\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "SaveCommentFunction"},
												"/invocations"
											]
										]}
								}
						}
			},


			"APIGWRESTAPIcommentsGET": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIcomments" },
							"HttpMethod": "GET",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"postId\": \"$input.params('id')\",\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "FindCommentsFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIcommentsOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIcomments" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
							"RequestParameters": {
        					"method.request.path.id": true
    					},
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIcomment": {
					"Type" : "AWS::ApiGateway::Resource",
					"Properties" : {
							"ParentId": { "Ref": "APIGWRESTAPIcomments" },
							"PathPart" : "{created-at}",
							"RestApiId": { "Ref": "APIGWRESTAPI" }
					}
			},

			"APIGWRESTAPIcommentGET": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIcomment" },
							"HttpMethod": "GET",
							"AuthorizationType": "AWS_IAM",
							"MethodResponses" : [{
									"StatusCode" : "200",
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Origin": "true"
									}
							}],
						 "RequestParameters": {
								 "method.request.path.id": true,
								 "method.request.path.created-at": true
						 },
							"Integration":{
									"Type" : "AWS",
									"IntegrationHttpMethod" : "POST",
									"Credentials" :
									{
										"Fn::GetAtt": ["APIGWToLambda","Arn"]
									},
									"RequestTemplates" : {

											"application/json" : {

													"Fn::Join": ["", [

															"{\n",
															"       \"postId\"   : \"$input.params('id')\",\n",
															"       \"date\" : \"$input.params('created-at')\",\n",
															"       \"config\": { \"stageName\" : \"$context.stage\"}\n",
															"}"
															]]
											}
									},
									"IntegrationResponses" : [
									{
											"SelectionPattern" : "",
											"StatusCode" : "200",
											"ResponseParameters" :
											{
													"method.response.header.Access-Control-Allow-Origin": "'*'"
											},
											"ResponseTemplates" :
											{
													"application/json" : ""
											}
									}],
										"Uri" :
										{
											"Fn::Join": [
											"",
											[
												"arn:aws:apigateway:",
												{"Ref": "AWS::Region"},
												":lambda:path/2015-03-31/functions/",
												{"Ref": "FindCommentFunction"},
												"/invocations"
											]
										]}
								}
						}
			},

			"APIGWRESTAPIcommentOPTIONS": {
					"Type": "AWS::ApiGateway::Method",
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"ResourceId": { "Ref": "APIGWRESTAPIcomment" },
							"HttpMethod": "OPTIONS",
							"AuthorizationType": "NONE",
							"MethodResponses" : [{
									"ResponseModels" : { "application/json" : "Empty" },
									"ResponseParameters" : {
											"method.response.header.Access-Control-Allow-Methods": "true",
											"method.response.header.Access-Control-Allow-Headers": "true",
											"method.response.header.Access-Control-Allow-Origin": "true"
									},
									"StatusCode" : "200"
							}],
					    "RequestParameters": {
					        "method.request.path.id": true,
					        "method.request.path.created-at": true
					    },
							"Integration" :
							{
									"Type" : "MOCK",
									"RequestTemplates" : {
											"application/json" : "{\"statusCode\": 200}"
									},
									"IntegrationResponses" : [
											{
													"SelectionPattern" : "",
													"StatusCode" : "200",
													"ResponseParameters" : {
															"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
															"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
															"method.response.header.Access-Control-Allow-Origin": "'*'"
															}
											}
									]
							}
					}
			},

			"APIGWRESTAPIDeployment":
			{
					"Type": "AWS::ApiGateway::Deployment",
					"DependsOn": [
									"APIGWRESTAPI",
									"APIGWRESTAPIlogin",
									"APIGWRESTAPIloginPOST",
									"APIGWRESTAPIloginOPTIONS",
									"APIGWRESTAPIuser",
									"APIGWRESTAPIuserPOST",
									"APIGWRESTAPIuserOPTIONS",
									"APIGWRESTAPIforums",
									"APIGWRESTAPIforumsGET",
									"APIGWRESTAPIforumsOPTIONS",
									"APIGWRESTAPIforum",
									"APIGWRESTAPIforumposts",
									"APIGWRESTAPIforumpostsGET",
									"APIGWRESTAPIforumpostsPOST",
									"APIGWRESTAPIforumpostsOPTIONS",
									"APIGWRESTAPIposts",
									"APIGWRESTAPIpost",
									"APIGWRESTAPIpostGET",
									"APIGWRESTAPIpostOPTIONS",
									"APIGWRESTAPIcomments",
									"APIGWRESTAPIcommentsGET",
									"APIGWRESTAPIcommentsPOST",
									"APIGWRESTAPIcommentsOPTIONS",
									"APIGWRESTAPIcomment",
									"APIGWRESTAPIcommentGET",
									"APIGWRESTAPIcommentOPTIONS"
					],
					"Properties": {
							"RestApiId": { "Ref": "APIGWRESTAPI" },
							"Description": "Initial deployment",
							"StageName": { "Ref": "APIStageName"},
							"StageDescription":
							{
									"StageName": {"Ref": "APIStageName"},
									"Description": "Prod Stage"
							}
					}
			}
	},

	"Outputs": {

		"APIID": {
					"Value":
					{"Ref": "APIGWRESTAPI"},
					"Description": "Prod stage deployment URL"
			}
	}
}
